@model WebApp.Models.Part.ImportStockDto
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Import Stock";
    var username = HttpContextAccessor.HttpContext.Session.GetString("Username");
    if (string.IsNullOrEmpty(Model.EmpUsername))
    {
        Model.EmpUsername = username;
    }
}

<div class="container mt-4">
    <h2 class="mb-4">📦 Import Stock</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }

    <form asp-action="Create" method="post">
        <input type="hidden" asp-for="EmpUsername" />

        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <strong>📝 Thông tin Import</strong>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label asp-for="Note">Ghi chú</label>
                            <input asp-for="Note" class="form-control" placeholder="Nhập ghi chú (nếu có)" />
                        </div>
                        <div class="form-group mb-3">
                            <label for="private-key-file">Private Key</label>
                            <input type="file" id="private-key-file" class="form-control" accept=".txt" />
                            <input type="hidden" id="PrivateKey" name="PrivateKey" />
                            <small class="form-text text-muted">Chọn file .txt chứa private key</small>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 mb-4">
                <div class="card shadow">
                    <div class="card-header bg-secondary text-white">
                        <strong>⚡ Tạo nhiều Item tự động</strong>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-2">
                            <label for="auto-partname">Part Name</label>
                            <input type="text" id="auto-partname" class="form-control" placeholder="VD: Cảm biến độ ẩm" />
                        </div>
                        <div class="form-group mb-2">
                            <label for="auto-manufacturer">Manufacturer</label>
                            <input type="text" id="auto-manufacturer" class="form-control" placeholder="VD: Arduino" />
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-2">
                                    <label for="auto-prefix">Serial Prefix</label>
                                    <input type="text" id="auto-prefix" class="form-control" placeholder="VD: A-" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-2">
                                    <label for="auto-qty">Số lượng</label>
                                    <input type="number" id="auto-qty" class="form-control" min="1" value="1" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group mb-3">
                            <label for="auto-price">Giá mỗi cái</label>
                            <input type="number" id="auto-price" class="form-control" step="0.01" min="0" />
                        </div>
                        <button type="button" id="generate-items" class="btn btn-secondary">Tạo danh sách</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                <strong>📋 Danh sách Items</strong>
                <button type="button" id="add-item" class="btn btn-sm btn-light">
                    <i class="bi bi-plus-circle"></i> Thêm Item
                </button>
            </div>
            <div class="card-body">
                <div id="items-container">
                    @for (int i = 0; i < Model.Items.Count; i++)
                    {
                        <div class="item-row card mb-3">
                            <div class="card-body">
                                <div class="row g-2">
                                    <div class="col-md-3">
                                        <label class="form-label small">Part Name</label>
                                        <input name="Items[@i].PartName" value="@Model.Items[i].PartName" class="form-control form-control-sm" />
                                    </div>
                                    <div class="col-md-3">
                                        <label class="form-label small">Manufacturer</label>
                                        <input name="Items[@i].Manufacturer" value="@Model.Items[i].Manufacturer" class="form-control form-control-sm" />
                                    </div>
                                    <div class="col-md-2">
                                        <label class="form-label small">Serial</label>
                                        <input name="Items[@i].Serial" value="@Model.Items[i].Serial" class="form-control form-control-sm" />
                                    </div>
                                    <div class="col-md-2">
                                        <label class="form-label small">Price</label>
                                        <input name="Items[@i].Price" value="@Model.Items[i].Price" type="number" step="0.01" min="0" class="form-control form-control-sm" />
                                    </div>
                                    <div class="col-md-2 d-flex align-items-end">
                                        <button type="button" class="btn btn-danger btn-sm remove-item w-100">Xóa</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                @if (!Model.Items.Any())
                {
                    <div class="text-center text-muted py-3">
                        Chưa có item nào. Vui lòng thêm item hoặc sử dụng tính năng tạo tự động.
                    </div>
                }
            </div>
        </div>

        <div class="text-end mb-4">
            <button type="submit" class="btn btn-primary btn-lg">
                <i class="bi bi-check-circle"></i> Tạo Import
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>

        document.addEventListener("DOMContentLoaded", function () {
            const container = document.getElementById("items-container");
            const addButton = document.getElementById("add-item");
            const generateButton = document.getElementById("generate-items");

            // Thêm 1 item thủ công
            addButton.addEventListener("click", function () {
                addItem();
            });

            // Xóa item
            container.addEventListener("click", function (e) {
                if (e.target.classList.contains("remove-item")) {
                    e.target.closest(".item-row").remove();
                    reindexItems();
                }
            });

            // Sinh nhiều item
            generateButton.addEventListener("click", function () {
                const partName = document.getElementById("auto-partname").value.trim();
                const manufacturer = document.getElementById("auto-manufacturer").value.trim();
                const prefix = document.getElementById("auto-prefix").value.trim();
                const price = document.getElementById("auto-price").value;
                const qty = parseInt(document.getElementById("auto-qty").value);

                if (!partName || !manufacturer || !prefix || !qty || qty < 1) {
                    alert("Vui lòng nhập đầy đủ thông tin để tạo danh sách!");
                    return;
                }

                for (let i = 1; i <= qty; i++) {
                    const serial = `${prefix}${i}`;
                    addItem(partName, manufacturer, serial, price);
                }
            });

            // Hàm thêm 1 item
            function addItem(partName = "", manufacturer = "", serial = "", price = "") {
                const index = container.children.length;
                const itemHtml = `
                    <div class="item-row card mb-3">
                        <div class="card-body">
                            <div class="row g-2">
                                <div class="col-md-3">
                                    <label class="form-label small">Part Name</label>
                                    <input name="Items[${index}].PartName" value="${partName}" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label small">Manufacturer</label>
                                    <input name="Items[${index}].Manufacturer" value="${manufacturer}" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label small">Serial</label>
                                    <input name="Items[${index}].Serial" value="${serial}" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label small">Price</label>
                                    <input name="Items[${index}].Price" value="${price}" type="number" step="0.01" min="0" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-2 d-flex align-items-end">
                                    <button type="button" class="btn btn-danger btn-sm remove-item w-100">Xóa</button>
                                </div>
                            </div>
                        </div>
                    </div>`;
                container.insertAdjacentHTML('beforeend', itemHtml);
                // Ẩn thông báo "Chưa có item" nếu có
                const emptyMsg = container.querySelector('.text-center.text-muted');
                if (emptyMsg) emptyMsg.style.display = 'none';
            }

            // Cập nhật lại index sau khi xóa
            function reindexItems() {
                const rows = container.querySelectorAll(".item-row");
                rows.forEach((row, idx) => {
                    row.querySelectorAll("input").forEach(input => {
                        const field = input.name.split('.').pop();
                        input.name = `Items[${idx}].${field}`;
                    });
                });
            }
        });
                document.getElementById("private-key-file").addEventListener("change", function (e) {
            const file = e.target.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function () {
                document.getElementById("PrivateKey").value = reader.result;
            };
            reader.readAsText(file, "UTF-16");
        });

    </script>
}
