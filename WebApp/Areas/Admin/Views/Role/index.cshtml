@model WebApp.Models.Permission.UserRoleViewModel
@{
    ViewData["Title"] = "Danh sách quyền";
}

<div class="container mt-4">
    <h2 class="mb-4">🔐 Quản lý Phân quyền</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["CreateRoleMessage"] != null)
    {
        <div class="alert alert-info">@TempData["CreateRoleMessage"]</div>
    }
    @if (TempData["DeleteRoleMessage"] != null)
    {
        <div class="alert alert-warning">@TempData["DeleteRoleMessage"]</div>
    }
    @if (TempData["AssignRoleMessage"] != null)
    {
        <div class="alert alert-success">@TempData["AssignRoleMessage"]</div>
    }
    @if (TempData["RevokeRoleMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["RevokeRoleMessage"]</div>
    }

    <div class="row mb-4">
        <div class="col-md-4 mb-3">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <strong>👥 Danh sách User</strong>
                </div>
                <div class="card-body p-0">
                    <ul id="user-list" class="scroll-list entity-list mb-0">
                        @if (Model.Users?.Any() == true)
                        {
                            foreach (var u in Model.Users)
                            {
                                <li class="list-group-item item" data-type="user" data-value="@u.Username">
                                    <i class="bi bi-person"></i> @u.Username
                                </li>
                            }
                        }
                        else
                        {
                            <li class="list-group-item text-muted">Không có user</li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-3">
            <div class="card shadow">
                <div class="card-header bg-secondary text-white">
                    <strong>🛡️ Danh sách Role</strong>
                </div>
                <div class="card-body p-0">
                    <ul id="role-list" class="scroll-list entity-list mb-0">
                        @if (Model.Roles?.Any() == true)
                        {
                            foreach (var r in Model.Roles)
                            {
                                <li class="list-group-item item" data-type="role" data-value="@r.Role">
                                    <i class="bi bi-shield-lock"></i> @r.Role
                                </li>
                            }
                        }
                        else
                        {
                            <li class="list-group-item text-muted">Không có role</li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-3">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <strong>📋 Role của User</strong>
                </div>
                <div class="card-body p-0">
                    <ul id="user-role-list" class="scroll-list entity-list mb-0">
                        <li class="list-group-item text-muted">Chọn user để xem role</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <strong>➕ Tạo Role mới</strong>
                </div>
                <div class="card-body">
                    <form asp-area="Admin" asp-controller="Role" asp-action="CreateRole" method="post">
                        <div class="form-group mb-3">
                            <label for="roleName">Tên Role</label>
                            <input type="text" class="form-control" name="roleName" placeholder="Nhập tên role" required />
                        </div>
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-plus-circle"></i> Thêm Role
                        </button>
                    </form>
                </div>
            </div>

            <div class="card shadow mt-4">
                <div class="card-header bg-danger text-white">
                    <strong>🗑️ Xóa Role</strong>
                </div>
                <div class="card-body">
                    <form asp-area="Admin" asp-controller="Role" asp-action="DeleteRole" method="post">
                        <div class="form-group mb-3">
                            <label for="roleName">Chọn Role</label>
                            <select name="roleName" class="form-control" required>
                                <option value="">-- Chọn Role --</option>
                                @foreach (var u in Model.Roles)
                                {
                                    <option value="@u.Role">@u.Role</option>
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-danger">Xóa Role</button>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <strong>🔐 Gán Role cho User</strong>
                </div>
                <div class="card-body">
                    <form asp-area="Admin" asp-controller="Role" asp-action="AssignRole" method="post">
                        <div class="form-group mb-3">
                            <label for="userName">Chọn User</label>
                            <select name="userName" class="form-control" required>
                                <option value="">-- Chọn User --</option>
                                @foreach (var u in Model.Users)
                                {
                                    <option value="@u.Username">@u.Username</option>
                                }
                            </select>
                        </div>
                        <div class="form-group mb-3">
                            <label for="roleName">Chọn Role</label>
                            <select name="roleName" class="form-control" required>
                                <option value="">-- Chọn Role --</option>
                                @foreach (var r in Model.Roles)
                                {
                                    <option value="@r.Role">@r.Role</option>
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-person-plus"></i> Gán Role
                        </button>
                    </form>
                </div>
            </div>

            <div class="card shadow mt-4">
                <div class="card-header bg-warning text-white">
                    <strong>⚠️ Thu hồi Role từ User</strong>
                </div>
                <div class="card-body">
                    <form asp-area="Admin" asp-controller="Role" asp-action="RevokeRole" method="post">
                        <div class="form-group mb-3">
                            <label for="revoke-username">Chọn User</label>
                            <select id="revoke-username" name="userName" class="form-control" required>
                                <option value="">-- Chọn User --</option>
                                @foreach (var u in Model.Users)
                                {
                                    <option value="@u.Username">@u.Username</option>
                                }
                            </select>
                        </div>
                        <div class="form-group mb-3">
                            <label for="revoke-role">Chọn Role</label>
                            <select id="revoke-role" name="roleName" class="form-control" required>
                                <option value="">-- Chọn Role --</option>
                                @foreach (var r in Model.Roles)
                                {
                                    <option value="@r.Role">@r.Role</option>
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-warning">
                            <i class="bi bi-person-dash"></i> Thu hồi Role
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        const roleApi = '/Admin/Role/GetRolesOfUser';
        const userList = document.getElementById('user-list');
        const userRoleList = document.getElementById('user-role-list');
        const revokeUsernameSelect = document.getElementById('revoke-username');
        const revokeRoleSelect = document.getElementById('revoke-role');

        // Hàm lấy role của user
        async function loadRolesOfUser(username) {
            try {
                const res = await fetch(`${roleApi}?username=${encodeURIComponent(username)}`);
                if (!res.ok) throw new Error('Lỗi tải role');
                const roles = await res.json();
                return roles.map(r => r.grantedRole || r.GrantedRole);
            } catch (err) {
                console.error(err);
                return null;
            }
        }

        // Khi click user → load role vào danh sách bên cạnh
        userList.addEventListener('click', async (e) => {
            const li = e.target.closest('li.item');
            if (!li) return;

            document.querySelectorAll('#user-list .item').forEach(el => el.classList.remove('active'));
            li.classList.add('active');

            const username = li.dataset.value;
            userRoleList.innerHTML = `<li class="list-group-item text-muted">Đang tải role...</li>`;

            const roles = await loadRolesOfUser(username);
            userRoleList.innerHTML = '';
            if (!roles) {
                userRoleList.innerHTML = `<li class="list-group-item text-danger">Không thể tải role</li>`;
            } else if (roles.length === 0) {
                userRoleList.innerHTML = `<li class="list-group-item text-muted">Không có role</li>`;
            } else {
                roles.forEach(roleName => {
                    const liRole = document.createElement('li');
                    liRole.className = 'list-group-item py-1 px-2';
                    liRole.innerHTML = `<i class="bi bi-shield-lock"></i> ${roleName}`;
                    userRoleList.appendChild(liRole);
                });
            }
        });

        // Khi chọn user ở dropdown revoke → load role vào select
        revokeUsernameSelect.addEventListener('change', async () => {
            const username = revokeUsernameSelect.value;
            revokeRoleSelect.innerHTML = '<option value="">--Chọn Role--</option>';
            if (!username) return;

            const roles = await loadRolesOfUser(username);
            if (!roles) {
                revokeRoleSelect.innerHTML += '<option value="" disabled>Lỗi tải role</option>';
            } else if (roles.length === 0) {
                revokeRoleSelect.innerHTML += '<option value="" disabled>Người dùng không có role</option>';
            } else {
                roles.forEach(roleName => {
                    const option = document.createElement('option');
                    option.value = roleName;
                    option.textContent = roleName;
                    revokeRoleSelect.appendChild(option);
                });
            }
        });
    </script>
}



<style>
    .scroll-list {
        max-height: 150px;
        overflow-y: auto;
        font-size: 0.75rem;
    }

    .entity-list .item {
        cursor: pointer;
        transition: background-color 0.2s;
        padding: 4px 8px;
    }

        .entity-list .item:hover {
            background-color: #f0f0f0;
        }

        .entity-list .item.active {
            background-color: #007bff;
            color: #fff;
        }

</style>