@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var title = ViewData["Title"] ?? "Admin Dashboard";
    var username = HttpContextAccessor.HttpContext.Session.GetString("Username");
    var roleString = HttpContextAccessor.HttpContext.Session.GetString("Role") ?? "";
    
    // Chia role thành mảng, loại bỏ khoảng trắng dư thừa
    var roles = roleString.Split(',', StringSplitOptions.RemoveEmptyEntries)
                          .Select(r => r.Trim().ToUpperInvariant())
                          .ToList();
    var sessionId = HttpContextAccessor.HttpContext.Session.GetString("SessionId");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@title - Admin</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
   <style>
    /* Layout chính */
    body, html {
        height: 100%;
        margin: 0;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    .d-flex-full {
        display: flex;
        min-height: 100vh;
        flex-direction: row;
    }

    /* Sidebar */
    .sidebar {
        width: 220px;
        background-color: #343a40;
        color: #fff;
        display: flex;
        flex-direction: column;
        padding-top: 1rem;
    }

    .sidebar a {
        color: #fff;
        text-decoration: none;
        padding: 0.6rem 1rem;
        display: flex;
        align-items: center;
        transition: background 0.2s;
    }

    .sidebar a:hover {
        background-color: #495057;
    }

    .sidebar .nav-link.active {
        background-color: #0d6efd;
    }

    .sidebar .collapse .nav-link {
        font-size: 0.95rem;
        padding-left: 1.5rem;
    }

    .sidebar .nav-link span {
        margin-left: auto;
        transition: transform 0.2s;
    }

    .sidebar .nav-link[aria-expanded="true"] span {
        transform: rotate(180deg);
    }

    /* Nội dung chính */
    .content {
        flex: 1;
        padding: 20px;
        background-color: #f8f9fa;
    }

    /* Navbar */
    .navbar-text {
        font-weight: 500;
    }

    /* Footer */
    footer {
        border-top: 1px solid #dee2e6;
        text-align: center;
        padding: 0.5rem 0;
        background-color: #fff;
        flex-shrink: 0;
    }

    /* Button logout */
    #logout-btn {
        text-align: left;
        width: 100%;
        padding-left: 1rem;
    }
</style>

</head>
<body>
    <div class="d-flex">
        <!-- Sidebar -->
        <ul class="nav nav-pills flex-column mb-auto">

    @if (string.IsNullOrEmpty(username))
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Admin" asp-controller="Employee" asp-action="Login">Login</a>
        </li>
    }
    else
    {
        <!-- DASHBOARD -->
        <li>
            <a class="nav-link" asp-area="Admin" asp-controller="Home" asp-action="Index">Dashboard</a>
        </li>

        <!-- QUẢN LÝ NHÂN VIÊN -->
        @if (roles.Contains("ADMIN"))
        {
            <li>
                <a class="nav-link d-flex justify-content-between align-items-center" data-bs-toggle="collapse" href="#collapseEmployee" role="button" aria-expanded="false" aria-controls="collapseEmployee">
                    Quản lý nhân viên <span class="ms-auto">▾</span>
                </a>
                <ul class="collapse nav flex-column ms-3" id="collapseEmployee">
                    <li><a class="nav-link" asp-area="Admin" asp-controller="Employee" asp-action="Index">Danh sách nhân viên</a></li>
                </ul>
            </li>
        }
        @if (roles.Contains("ADMIN"))
        {
            <li>
                <a class="nav-link d-flex justify-content-between align-items-center" data-bs-toggle="collapse" href="#collapseRoleProfile" role="button" aria-expanded="false" aria-controls="collapseEmployee">
                    Quản lý phân quyền và profile <span class="ms-auto">▾</span>
                </a>
                <ul class="collapse nav flex-column ms-3" id="collapseRoleProfile">
                    <li><a class="nav-link" asp-area="Admin" asp-controller="Role" asp-action="Index">Phân quyền</a></li>
                    <li><a class="nav-link" asp-area="Admin" asp-controller="Profile" asp-action="Index">Profile</a></li>
                </ul>
            </li>
        }
        <!-- QUẢN LÝ KHÁCH HÀNG -->
        <li>
            @if (roles.Contains("ADMIN"))
        {
            <li>
                <a class="nav-link d-flex justify-content-between align-items-center" data-bs-toggle="collapse" href="#collapseCustomer" role="button" aria-expanded="false" aria-controls="collapseCustomer">
                    Quản lý khách hàng <span class="ms-auto">▾</span>
                </a>
                <ul class="collapse nav flex-column ms-3" id="collapseCustomer">
                    <li><a class="nav-link" asp-area="Admin" asp-controller="Customer" asp-action="Index">Danh sách khách hàng</a></li>
                     <li><a class="nav-link" asp-area="Admin" asp-controller="Booking" asp-action="Index">Danh sách đặt lịch</a></li>
                </ul>
            </li>
        }
        </li>

        <!-- QUẢN LÝ NHẬP XUẤT KHO -->
        @if (roles.Contains("THUKO") || roles.Contains("ADMIN"))
        {
            <li>
                <a class="nav-link d-flex justify-content-between align-items-center" data-bs-toggle="collapse" href="#collapseStock" role="button" aria-expanded="false" aria-controls="collapseStock">
                    Quản lý nhập xuất kho <span class="ms-auto">▾</span>
                </a>
                <ul class="collapse nav flex-column ms-3" id="collapseStock">
                    <li><a class="nav-link" asp-area="Admin" asp-controller="Import" asp-action="Index">Nhập kho</a></li>
                    <li><a class="nav-link" asp-area="Admin" asp-controller="Export" asp-action="Index">Xuất kho</a></li>
                </ul>
            </li>
        }

        <!-- QUẢN LÝ HÓA ĐƠN -->
        <li>
            <a class="nav-link" asp-area="Admin" asp-controller="Invoice" asp-action="Index">Quản lý hóa đơn</a>
        </li>

        <!-- QUẢN LÝ LINH KIỆN -->
        <li>
            <a class="nav-link d-flex justify-content-between align-items-center" data-bs-toggle="collapse" href="#collapseParts" role="button" aria-expanded="false" aria-controls="collapseParts">
                Quản lý linh kiện <span class="ms-auto">▾</span>
            </a>
            <ul class="collapse nav flex-column ms-3" id="collapseParts">
                <li><a class="nav-link" asp-area="Admin" asp-controller="Part" asp-action="Index">Danh sách linh kiện</a></li>
                <li><a class="nav-link" asp-area="Admin" asp-controller="PartRequest" asp-action="Index">Danh sách yêu cầu</a></li>
            </ul>
        </li>

        <!-- QUẢN LÝ ORDER -->
        <li>
            <a class="nav-link d-flex justify-content-between align-items-center" data-bs-toggle="collapse" href="#collapseOrder" role="button" aria-expanded="false" aria-controls="collapseOrder">
                Quản lý Order <span class="ms-auto">▾</span>
            </a>
            <ul class="collapse nav flex-column ms-3" id="collapseOrder">
                <li><a class="nav-link" asp-area="Admin" asp-controller="Order" asp-action="Index">Danh sách đơn hàng</a></li>
                <li><a class="nav-link" asp-area="Admin" asp-controller="Order" asp-action="WarrantyIndex">Danh sách đơn bảo hành</a></li>
                <li><a class="nav-link" asp-area="Admin" asp-controller="Order" asp-action="RepairIndex">Danh sách đơn sửa chữa</a></li>
            </ul>
        </li>

        <!-- QUẢN LÝ ĐẶT LỊCH -->
       

        <!-- QUẢN LÝ LỊCH LÀM VIỆC -->
        <li>
            <a class="nav-link" asp-area="Admin" asp-controller="Schedule" asp-action="Index">Quản lý lịch làm việc</a>
        </li>

        <!-- ĐĂNG XUẤT -->
        <li class="nav-item mt-3">
            <form method="post" asp-area="Admin" asp-controller="Employee" asp-action="Logout">
                <button type="submit" class="nav-link btn btn-link text-start">Logout (@username)</button>
            </form>
        </li>
    }
</ul>


        <!-- Main content -->
        <div class="content w-100">
            <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
                <div class="container-fluid">
                    @if (!string.IsNullOrEmpty(username))
                    {
                        <span class="navbar-text">
                            Welcome, @username (@string.Join(", ", roles)) ,@sessionId
                        </span>


                    }
                    else
                    {
                        <span class="navbar-text">
                            Welcome, Guest!
                        </span>
                    }
                </div>
            </nav>

            @RenderBody()
        </div>
    </div>

    <footer class="border-top text-muted py-2 mt-auto">
        <div class="container text-center">
            &copy; 2025 - Admin Dashboard
        </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    @RenderSection("Scripts", required: false)
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
    <script>
        // Lấy username từ Razor, đảm bảo không null
        const username = '@(username ?? "")';
        const sessionId = '@(HttpContextAccessor.HttpContext.Session.GetString("SessionId") ?? "")';
        console.log('👤 sessionId:', sessionId);
        // Tạo SignalR connection
         @inject IConfiguration Configuration
            const connection = new signalR.HubConnectionBuilder()
        .withUrl('@Configuration["SignalR:NotificationHubUrl"]?sessionId=' + encodeURIComponent(sessionId))
        .withAutomaticReconnect()
        .build();
        const dashboardUrl = '@Url.Action("Index", "Home", new { area = "Admin" })';

        // Lắng nghe ForceLogout từ server
        connection.on('ForceLogout', async function(message) {
        const logoutUrl = '@Url.Action("Logout", "Employee", new { area = "Admin" })';
        const loginUrl = '@Url.Action("Login", "Employee", new { area = "Admin" })';

        try {
            await fetch(logoutUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                }
            });
        } catch (err) {
            console.error('Logout request failed', err);
        } finally {
            // Chuyển về login
            window.location.href = loginUrl;
        }
    });


        // Start SignalR connection
        async function startConnection() {
            try {
                await connection.start();
                console.log('✅ SignalR connected');
            } catch (err) {
                console.error('⚠️ SignalR start error:', err);
                setTimeout(startConnection, 5000); // thử lại sau 5s
            }
        }

        startConnection();

        // 🔐 Đồng bộ login/logout đa tab
        const channel = new BroadcastChannel('Aauth_channel');

        channel.onmessage = (event) => {
            console.log('📢 Nhận auth event từ tab khác:', event.data);
            if (event.data === 'logout') {
                setTimeout(() => {
                    window.location.href = loginUrl;
                }, 1000); // 1000 ms = 1 giây
            } else if (event.data === 'login') {
                setTimeout(() => {
                    window.location.href = dashboardUrl;
                }, 1000);
                
            }
        };

        // Gửi sự kiện logout từ form
        const logoutForm = document.querySelector('form[action$="Logout"]');
        if (logoutForm) {
            logoutForm.addEventListener('submit', () => {
                channel.postMessage('logout');
                console.log('📡 Gửi logout event sang các tab khác');
            });
        }
        const loginLink = document.querySelector('a[href$="Login"]');
if (loginLink) {
    loginLink.addEventListener('click', () => {
        channel.postMessage('login');
        console.log('📡 Gửi login event sang các tab khác');
    });
}

    </script>

</body>
</html>
