@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var title = ViewData["Title"] ?? "Admin Dashboard";
    var username = HttpContextAccessor.HttpContext.Session.GetString("Username");
    var roleString = HttpContextAccessor.HttpContext.Session.GetString("Role") ?? "";
    
    // Chia role thành mảng, loại bỏ khoảng trắng dư thừa
    var roles = roleString.Split(',', StringSplitOptions.RemoveEmptyEntries)
                          .Select(r => r.Trim().ToUpperInvariant())
                          .ToList();
    var sessionId = HttpContextAccessor.HttpContext.Session.GetString("SessionId");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@title - Admin</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .sidebar {
            min-width: 220px;
            max-width: 220px;
            background-color: #343a40;
            color: white;
            min-height: 100vh;
        }

            .sidebar a {
                color: white;
                text-decoration: none;
            }

                .sidebar a:hover {
                    background-color: #495057;
                    color: white;
                }

        .content {
            flex: 1;
            padding: 20px;
        }

        .nav-link.active {
            background-color: #0d6efd !important;
            color: white !important;
        }
    </style>
</head>
<body>
    <div class="d-flex">
        <!-- Sidebar -->
        <nav class="sidebar d-flex flex-column p-3">
            <ul class="nav nav-pills flex-column mb-auto">
                @if (string.IsNullOrEmpty(username))
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Admin" asp-controller="Employee" asp-action="Login">Login</a>
                    </li>
                }
                else
                {
                    <li>
                        <a class="nav-link" asp-area="Admin" asp-controller="Home" asp-action="Index">Dashboard</a>
                    </li>
                    
                    @if (roles.Contains("ADMIN"))
                    {
                        <li>
                            <a class="nav-link" asp-area="Admin" asp-controller="Employee" asp-action="Index">Employee List</a>
                        </li>
                    }
                    @if (roles.Contains("ADMIN"))
                    {
                        <li>
                            <a class="nav-link" asp-area="Admin" asp-controller="Role" asp-action="Index">Role User</a>
                        </li>
                    }
                    @if (roles.Contains("ADMIN"))
                    {
                        <li>
                            <a class="nav-link" asp-area="Admin" asp-controller="Profile" asp-action="Index">Profile</a>
                        </li>
                    }
                    @if (roles.Contains("THUKO") || roles.Contains("ADMIN"))
                    {
                        <li>
                            <a class="nav-link" asp-area="Admin" asp-controller="Import" asp-action="Index">Nhập kho</a>
                        </li>
                    }


                    <!-- Đăng xuất -->
                    <li class="nav-item mt-3">
                        <form method="post" asp-area="Admin" asp-controller="Employee" asp-action="Logout">
                            <button type="submit" class="nav-link btn btn-link text-start text-white" id="logout-btn">
                                Logout (@username)
                            </button>
                        </form>
                    </li>
                }
            </ul>
        </nav>

        <!-- Main content -->
        <div class="content w-100">
            <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
                <div class="container-fluid">
                    @if (!string.IsNullOrEmpty(username))
                    {
                        <span class="navbar-text">
                            Welcome, @username (@string.Join(", ", roles)) ,@sessionId
                        </span>


                    }
                    else
                    {
                        <span class="navbar-text">
                            Welcome, Guest!
                        </span>
                    }
                </div>
            </nav>

            @RenderBody()
        </div>
    </div>

    <footer class="border-top text-muted py-2 mt-auto">
        <div class="container text-center">
            &copy; 2025 - Admin Dashboard
        </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    @RenderSection("Scripts", required: false)
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
    <script>
        // Lấy username từ Razor, đảm bảo không null
        const username = '@(username ?? "")';
        const sessionId = '@(HttpContextAccessor.HttpContext.Session.GetString("SessionId") ?? "")';

        // Tạo SignalR connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl('http://10.147.20.199:5131/Hubs/notification?sessionId=' + encodeURIComponent(sessionId))
            .withAutomaticReconnect()
            .build();

        // Lắng nghe ForceLogout từ server
        connection.on('ForceLogout', async function(message) {
        const logoutUrl = '@Url.Action("Logout", "Employee", new { area = "Admin" })';
        const loginUrl = '@Url.Action("Login", "Employee", new { area = "Admin" })';

        try {
            await fetch(logoutUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                }
            });
        } catch (err) {
            console.error('Logout request failed', err);
        } finally {
            // Chuyển về login
            window.location.href = loginUrl;
        }
    });


        // Start SignalR connection
        async function startConnection() {
            try {
                await connection.start();
                console.log('✅ SignalR connected');
            } catch (err) {
                console.error('⚠️ SignalR start error:', err);
                setTimeout(startConnection, 5000); // thử lại sau 5s
            }
        }

        startConnection();

        // 🔐 Đồng bộ login/logout đa tab
        const channel = new BroadcastChannel('auth_channel');

        channel.onmessage = (event) => {
            console.log('📢 Nhận auth event từ tab khác:', event.data);
            if (event.data === 'logout') {
                window.location.href = loginUrl;
            } else if (event.data === 'login') {
                window.location.href = dashboardUrl;
            }
        };

        // Gửi sự kiện logout từ form
        const logoutForm = document.querySelector('form[action$="Logout"]');
        if (logoutForm) {
            logoutForm.addEventListener('submit', () => {
                channel.postMessage('logout');
                console.log('📡 Gửi logout event sang các tab khác');
            });
        }

        // Nếu cần, gửi sự kiện login khi load trang (nếu muốn)
        // channel.postMessage('login');
    </script>

</body>
</html>
