-- Drop bảng child trước rồi mới đến parent
DROP TABLE CUSTOMER_APPOINTMENT CASCADE CONSTRAINTS PURGE;
DROP TABLE EMPLOYEE_SHIFT CASCADE CONSTRAINTS PURGE;
DROP TABLE USER_OTP_LOG CASCADE CONSTRAINTS PURGE;
DROP TABLE PART_REQUEST_ITEM CASCADE CONSTRAINTS PURGE;
DROP TABLE PART_REQUEST CASCADE CONSTRAINTS PURGE;
DROP TABLE STOCK_OUT_ITEM CASCADE CONSTRAINTS PURGE;
DROP TABLE STOCK_OUT CASCADE CONSTRAINTS PURGE;
DROP TABLE PART CASCADE CONSTRAINTS PURGE;
DROP TABLE STOCK_IN_ITEM CASCADE CONSTRAINTS PURGE;
DROP TABLE STOCK_IN CASCADE CONSTRAINTS PURGE;
DROP TABLE ASSIGNMENT CASCADE CONSTRAINTS PURGE;
DROP TABLE ORDER_REQUEST CASCADE CONSTRAINTS PURGE;
DROP TABLE EMPLOYEE_KEYS CASCADE CONSTRAINTS PURGE;
DROP TABLE CUSTOMER_KEYS CASCADE CONSTRAINTS PURGE;
DROP TABLE EMPLOYEE_LOGIN_AUDIT CASCADE CONSTRAINTS PURGE;
DROP TABLE CUSTOMER_LOGIN_AUDIT CASCADE CONSTRAINTS PURGE;
DROP TABLE CUSTOMER CASCADE CONSTRAINTS PURGE;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS PURGE;

-- 2.1 Bảng EMPLOYEE
CREATE TABLE EMPLOYEE (
    EMP_ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FULL_NAME      VARCHAR2(100) NOT NULL,
    USERNAME       VARCHAR2(50) UNIQUE NOT NULL,
    PASSWORD_HASH  VARCHAR2(256) NOT NULL,
    PUBLIC_KEY     CLOB,
    STATUS         VARCHAR2(10) DEFAULT 'ACTIVE',
    CREATED_AT     TIMESTAMP DEFAULT SYSTIMESTAMP,
    EMAIL          VARCHAR2(100) UNIQUE NOT NULL,
    PHONE          VARCHAR2(20) UNIQUE NOT NULL,
    ROLE           VARCHAR2(50) NOT NULL,
    CONSTRAINT role_chk CHECK (ROLE IN ('ADMIN','TECHNICIAN','RECEPTIONIST','WAREHOUSE'))
);

-- 2.2 Bảng CUSTOMER
CREATE TABLE CUSTOMER (
    PHONE         VARCHAR2(20) PRIMARY KEY,
    FULL_NAME     VARCHAR2(100) NOT NULL,
    USERNAME      VARCHAR2(50) UNIQUE,
    PASSWORD_HASH VARCHAR2(256),
    PUBLIC_KEY    CLOB,
    STATUS        VARCHAR2(10) DEFAULT 'PENDING',
    CREATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP,
    EMAIL         VARCHAR2(100),
    ADDRESS       VARCHAR2(200)
);

-- 2.3 Bảng EMPLOYEE_KEYS
CREATE TABLE EMPLOYEE_KEYS (
    EMP_ID      NUMBER PRIMARY KEY,
    PRIVATE_KEY CLOB,
    CONSTRAINT fk_employee_keys FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
);

-- 2.4 Bảng CUSTOMER_KEYS
CREATE TABLE CUSTOMER_KEYS (
    CUSTOMER_ID      VARCHAR2(20) PRIMARY KEY,
    PRIVATE_KEY      CLOB,
    CONSTRAINT fk_customer_keys FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(PHONE)
);

-- 2.5 Bảng EMPLOYEE_LOGIN_AUDIT
CREATE TABLE EMPLOYEE_LOGIN_AUDIT (
    AUDIT_ID   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USERNAME   VARCHAR2(50),
    LOGIN_TIME TIMESTAMP DEFAULT SYSTIMESTAMP,
    STATUS     VARCHAR2(20)
);

-- 2.6 Bảng CUSTOMER_LOGIN_AUDIT
CREATE TABLE CUSTOMER_LOGIN_AUDIT (
    AUDIT_ID   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USERNAME   VARCHAR2(50),
    LOGIN_TIME TIMESTAMP DEFAULT SYSTIMESTAMP,
    STATUS     VARCHAR2(20)
);

-- 2.7 Bảng ORDER_REQUEST
CREATE TABLE ORDER_REQUEST (
    ORDER_ID       NUMBER PRIMARY KEY,
    CUSTOMER_PHONE VARCHAR2(20) NOT NULL,
    RECEIVER_EMP   NUMBER NOT NULL,
    ORDER_TYPE     VARCHAR2(20) NOT NULL,
    RECEIVED_DATE  DATE NOT NULL,
    STATUS         VARCHAR2(50) NOT NULL,
    DESCRIPTION    VARCHAR2(500),
    CONSTRAINT fk_order_customer FOREIGN KEY (CUSTOMER_PHONE) REFERENCES CUSTOMER(PHONE),
    CONSTRAINT fk_order_employee FOREIGN KEY (RECEIVER_EMP) REFERENCES EMPLOYEE(EMP_ID)
);

-- 2.8 Bảng ASSIGNMENT
CREATE TABLE ASSIGNMENT (
    ASSIGN_ID     NUMBER PRIMARY KEY,
    ORDER_ID      NUMBER NOT NULL,
    EMP_ID        NUMBER NOT NULL,
    START_DATE    DATE,
    END_DATE      DATE,
    STATUS        VARCHAR2(50),
    CONSTRAINT fk_assign_order FOREIGN KEY (ORDER_ID) REFERENCES ORDER_REQUEST(ORDER_ID),
    CONSTRAINT fk_assign_employee FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
);

-- 2.9 Bảng STOCK_IN
CREATE TABLE STOCK_IN (
    STOCKIN_ID    NUMBER PRIMARY KEY,
    EMP_ID        NUMBER NOT NULL,
    IN_DATE       DATE NOT NULL,
    NOTE          VARCHAR2(200),
    CONSTRAINT fk_stockin_employee FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
);

-- 2.10 Bảng STOCK_IN_ITEM
CREATE TABLE STOCK_IN_ITEM (
    STOCKIN_ITEM_ID NUMBER PRIMARY KEY,
    STOCKIN_ID      NUMBER NOT NULL,
    PART_NAME       VARCHAR2(100) NOT NULL,
    MANUFACTURER    VARCHAR2(100),
    SERIAL          VARCHAR2(50) UNIQUE NOT NULL,
    STATUS          VARCHAR2(50) DEFAULT 'IN_STOCK',
    CONSTRAINT fk_stockinitem_stockin FOREIGN KEY (STOCKIN_ID) REFERENCES STOCK_IN(STOCKIN_ID)
);

-- 2.11 Bảng PART
CREATE TABLE PART (
    PART_ID        NUMBER PRIMARY KEY,
    NAME           VARCHAR2(100) NOT NULL,
    MANUFACTURER   VARCHAR2(100),
    SERIAL         VARCHAR2(50) UNIQUE NOT NULL,
    STATUS         VARCHAR2(50) NOT NULL,
    STOCKIN_ITEM_ID NUMBER NOT NULL,
    ORDER_ID       NUMBER NULL,
    CONSTRAINT fk_part_stockinitem FOREIGN KEY (STOCKIN_ITEM_ID) REFERENCES STOCK_IN_ITEM(STOCKIN_ITEM_ID),
    CONSTRAINT fk_part_order FOREIGN KEY (ORDER_ID) REFERENCES ORDER_REQUEST(ORDER_ID)
);

-- 2.12 Bảng STOCK_OUT
CREATE TABLE STOCK_OUT (
    STOCKOUT_ID   NUMBER PRIMARY KEY,
    ORDER_ID      NUMBER NOT NULL,
    EMP_ID        NUMBER NOT NULL,
    OUT_DATE      DATE NOT NULL,
    NOTE          VARCHAR2(200),
    CONSTRAINT fk_stockout_order FOREIGN KEY (ORDER_ID) REFERENCES ORDER_REQUEST(ORDER_ID),
    CONSTRAINT fk_stockout_employee FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
);

-- 2.13 Bảng STOCK_OUT_ITEM
CREATE TABLE STOCK_OUT_ITEM (
    STOCKOUT_ITEM_ID NUMBER PRIMARY KEY,
    STOCKOUT_ID      NUMBER NOT NULL,
    PART_ID          NUMBER NOT NULL,
    CONSTRAINT fk_stockoutitem_stockout FOREIGN KEY (STOCKOUT_ID) REFERENCES STOCK_OUT(STOCKOUT_ID),
    CONSTRAINT fk_stockoutitem_part FOREIGN KEY (PART_ID) REFERENCES PART(PART_ID)
);

-- 2.14 Bảng PART_REQUEST
CREATE TABLE PART_REQUEST (
    REQUEST_ID   NUMBER PRIMARY KEY,
    ORDER_ID     NUMBER NOT NULL,
    EMP_ID       NUMBER NOT NULL,
    REQUEST_DATE DATE NOT NULL,
    STATUS       VARCHAR2(50) NOT NULL,
    CONSTRAINT fk_partrequest_order FOREIGN KEY (ORDER_ID) REFERENCES ORDER_REQUEST(ORDER_ID),
    CONSTRAINT fk_partrequest_employee FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
);

-- 2.15 Bảng PART_REQUEST_ITEM
CREATE TABLE PART_REQUEST_ITEM (
    REQUEST_ITEM_ID NUMBER PRIMARY KEY,
    REQUEST_ID      NUMBER NOT NULL,
    PART_ID         NUMBER NOT NULL,
    CONSTRAINT fk_partrequestitem_request FOREIGN KEY (REQUEST_ID) REFERENCES PART_REQUEST(REQUEST_ID),
    CONSTRAINT fk_partrequestitem_part FOREIGN KEY (PART_ID) REFERENCES PART(PART_ID)
);

-- 2.16 Bảng USER_OTP_LOG
CREATE TABLE USER_OTP_LOG (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID    NUMBER NOT NULL,
    USERNAME   VARCHAR2(100) NOT NULL,
    OTP        VARCHAR2(10) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    EXPIRED_AT TIMESTAMP,
    USED       CHAR(1) DEFAULT 'N'
);

-- 2.17 Bảng EMPLOYEE_SHIFT
CREATE TABLE EMPLOYEE_SHIFT (
    SHIFT_ID     NUMBER PRIMARY KEY,
    EMP_ID       NUMBER NOT NULL,
    SHIFT_DATE   DATE NOT NULL,
    START_TIME   TIMESTAMP NOT NULL,
    END_TIME     TIMESTAMP NOT NULL,
    STATUS       VARCHAR2(20) DEFAULT 'SCHEDULED',
    CONSTRAINT fk_shift_employee FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
);

-- 2.18 Bảng CUSTOMER_APPOINTMENT
CREATE TABLE CUSTOMER_APPOINTMENT (
    APPOINTMENT_ID NUMBER PRIMARY KEY,
    CUSTOMER_PHONE VARCHAR2(20) NOT NULL,
    APPOINTMENT_DATE DATE NOT NULL,
    STATUS         VARCHAR2(20) DEFAULT 'SCHEDULED',
    DESCRIPTION    VARCHAR2(500),
    CONSTRAINT fk_appointment_customer FOREIGN KEY (CUSTOMER_PHONE) REFERENCES CUSTOMER(PHONE)
);
